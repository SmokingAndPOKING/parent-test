local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "testing ui",
   Icon = 0,
   LoadingTitle = "TESTING",
   LoadingSubtitle = "sads",
   Theme = "Bloom",

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

local function LoadScript(url)
    local success, scriptContent = pcall(function()
        return game:HttpGet(url)
    end)
    if success then
        local ok, err = pcall(function()
            loadstring(scriptContent)()
        end)
        if not ok then
            Rayfield:Notify({
                Title = "Error",
                Content = "Script failed: " .. tostring(err),
                Duration = 5
            })
        end
    else
        Rayfield:Notify({
            Title = "Error",
            Content = "Failed to load script URL",
            Duration = 5
        })
    end
end

-- 🌟 Tab 1 - Dead Rails Scripts
local Tab1 = Window:CreateTab("Dead Rails Scripts", 4483362458)
local Section1 = Tab1:CreateSection("Useful Scripts")

Tab1:CreateButton({ Name = "Infinite Yield", Callback = function() LoadScript("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source") end })
Tab1:CreateButton({ Name = "Dex Explorer", Callback = function() LoadScript("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua") end })
Tab1:CreateButton({ Name = "Fly GUI", Callback = function() LoadScript("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt") end })
Tab1:CreateButton({ Name = "Anti AFK", Callback = function() LoadScript("https://raw.githubusercontent.com/hassanxzayn-lua/Anti-afk/main/antiafkbyhassanxzyn") end })

-- 🌟 Tab 2 - Beaks Scripts
local Tab2 = Window:CreateTab("Beaks ", 4483362458)
local Section2 = Tab2:CreateSection("More Scripts")

Tab2:CreateButton({ Name = "CMD-X", Callback = function() LoadScript("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source") end })
Tab2:CreateButton({ Name = "Remote Spy", Callback = function() LoadScript("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/master/SimpleSpy.lua") end })
Tab2:CreateButton({ Name = "Server Crasher (Test)", Callback = function() LoadScript("https://raw.githubusercontent.com/scriptinguniverse/fakeurl/main/servercrasher.lua") end })
Tab2:CreateButton({ Name = "Mobile Script", Callback = function() LoadScript("https://raw.githubusercontent.com/RobloxScriptHub/MobileScript/main/script.lua") end })

-- 🌟 Tab 3 - PetSim/PetsGo
local Tab3 = Window:CreateTab("PetSim/PetsGo", 4483362458)
local Section3 = Tab3:CreateSection("Pet Sim Scripts")

Tab3:CreateButton({ Name = "Huge Games Hub", Callback = function() LoadScript("https://raw.githubusercontent.com/RunDTM/scripts/main/hugehub.lua") end })
Tab3:CreateButton({ Name = "PetsGO Auto Farm", Callback = function() LoadScript("https://raw.githubusercontent.com/scriptpastebin/raw/main/petsgopetsim") end })
Tab3:CreateButton({ Name = "Project WD Hub", Callback = function() LoadScript("https://raw.githubusercontent.com/Project-WD/scripts/main/main.lua") end })

-- 🌟 Tab 4 - JailBreak
local Tab4 = Window:CreateTab("JailBreak", 4483362458)
local Section4 = Tab4:CreateSection("JailBreak Scripts")

Tab4:CreateButton({ Name = "Vynixius Jailbreak", Callback = function() LoadScript("https://raw.githubusercontent.com/RegularVynixu/Jailbreak/main/Main.lua") end })
Tab4:CreateButton({ Name = "Admin GUI", Callback = function() LoadScript("https://pastebin.com/raw/Bjz3U2bW") end })
Tab4:CreateButton({ Name = "ThunderZ GUI", Callback = function() LoadScript("https://pastebin.com/raw/VLktG2yY") end })

-- 🌟 Tab 5 - Fisch
local Tab5 = Window:CreateTab("Fisch", 4483362458)
local Section5 = Tab5:CreateSection("Fisch Scripts")

Tab5:CreateButton({ Name = "Fisch GUI", Callback = function() LoadScript("https://raw.githubusercontent.com/FischScripts/FischHub/main/FischGui.lua") end })
Tab5:CreateButton({ Name = "Auto Chest Collector", Callback = function() LoadScript("https://raw.githubusercontent.com/FischScripts/FischHub/main/AutoChest.lua") end })
Tab5:CreateButton({ Name = "Utility Tools", Callback = function() LoadScript("https://raw.githubusercontent.com/FischScripts/FischHub/main/Utils.lua") end })

-- 🌟 Tab 6 - Settings
local SettingsTab = Window:CreateTab("Settings", 4483362458)
local SettingsSection = SettingsTab:CreateSection("Performance")

SettingsTab:CreateSlider({
    Name = "FPS Cap",
    Range = {30, 240},
    Increment = 10,
    Suffix = " FPS",
    CurrentValue = 60,
    Callback = function(Value)
        if setfpscap then
            setfpscap(Value)
            Rayfield:Notify({
                Title = "🎯 FPS Cap Set",
                Content = "FPS has been capped to " .. tostring(Value),
                Duration = 4
            })
        else
            Rayfield:Notify({
                Title = "⚠️ Unsupported",
                Content = "Your executor does not support setfpscap.",
                Duration = 5
            })
        end
    end
})
-- 🌟 Watermark Settings Section
local WatermarkSection = SettingsTab:CreateSection("WaterMark")

-- 🌟 Watermark Position Sliders
local wmX = 10
local wmY = 10

SettingsTab:CreateSlider({
    Name = "↔️ Watermark X Position",
    Range = {0, 1700},
    Increment = 5,
    Suffix = " px",
    CurrentValue = wmX,
    Callback = function(Value)
        wmX = Value
        if watermark then
            watermark.Position = Vector2.new(wmX, wmY)
        end
    end
})

SettingsTab:CreateSlider({
    Name = "↕️ Watermark Y Position",
    Range = {0, 965},
    Increment = 5,
    Suffix = " px",
    CurrentValue = wmY,
    Callback = function(Value)
        wmY = Value
        if watermark then
            watermark.Position = Vector2.new(wmX, wmY)
        end
    end
})

SettingsTab:CreateToggle({
    Name = "🧩 Toggle Watermark",
    CurrentValue = true,
    Callback = function(Value)
        if watermark then
            watermark.Visible = Value
        end
    end
})

-- 🌟 Watermark Display Toggles (FPS, Ping, Time, Uptime)
local showFPS = true
local showPing = true
local showTime = true
local showUptime = true

SettingsTab:CreateToggle({
    Name = "🖥️ Toggle FPS Display",
    CurrentValue = showFPS,
    Callback = function(Value)
        showFPS = Value
    end
})

SettingsTab:CreateToggle({
    Name = "📡 Toggle Ping Display",
    CurrentValue = showPing,
    Callback = function(Value)
        showPing = Value
    end
})

SettingsTab:CreateToggle({
    Name = "🕒 Toggle Time Display",
    CurrentValue = showTime,
    Callback = function(Value)
        showTime = Value
    end
})

SettingsTab:CreateToggle({
    Name = "⏱️ Toggle Uptime Display",
    CurrentValue = showUptime,
    Callback = function(Value)
        showUptime = Value
    end
})

-- 🌟 Keep the Watermark (FPS, Ping, Time, Uptime) Code Separate at the Bottom
do
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    watermark = Drawing.new("Text")
    watermark.Visible = true
    watermark.Color = Color3.fromRGB(255, 255, 255)
    watermark.Size = 16
    watermark.Position = Vector2.new(wmX, wmY)
    watermark.Outline = true
    watermark.Font = 2
    watermark.Center = false

    -- Time Setup
    local startTime = tick()
    local frameCounter = 0
    local lastFpsUpdate = tick()
    local currentFPS = 0
    local currentPing = 0

    RunService.RenderStepped:Connect(function()
        frameCounter += 1
        local now = tick()

        if now - lastFpsUpdate >= 1 then
            currentFPS = frameCounter
            frameCounter = 0
            lastFpsUpdate = now

            local success, result = pcall(function()
                return LocalPlayer:GetNetworkPing() * 1000
            end)
            if success and result then
                currentPing = math.floor(result + 0.5)
            end
        end

        local uptime = tick() - startTime
        local hrs = math.floor(uptime / 3600)
        local mins = math.floor((uptime % 3600) / 60)
        local secs = math.floor(uptime % 60)
        local uptimeStr = string.format("%02d:%02d:%02d", hrs, mins, secs)

        local dt = os.date("*t")
        local ampm = dt.hour >= 12 and "PM" or "AM"
        local hour12 = dt.hour % 12
        if hour12 == 0 then hour12 = 12 end
        local timeStr = string.format("%02d/%02d/%04d %02d:%02d %s", dt.day, dt.month, dt.year, hour12, dt.min, ampm)

        -- Build the watermark text based on toggles
        local textParts = {"🧩 Polluted Hub"}
        
        if showFPS then
            table.insert(textParts, string.format("FPS: %d", currentFPS))
        end
        if showPing then
            table.insert(textParts, string.format("Ping: %dms", currentPing))
        end
        if showTime then
            table.insert(textParts, string.format("Time: %s", timeStr))
        end
        if showUptime then
            table.insert(textParts, string.format("Uptime: %s", uptimeStr))
        end

        -- Update watermark text
        watermark.Text = table.concat(textParts, " | ")
    end)
end


SettingsTab:CreateSection("Webhooks & Discord")

-- Webhook Textboxes
local mainWebhook = ""
local backupWebhook = ""

SettingsTab:CreateInput({
    Name = "Chat Logger Webhook",
    PlaceholderText = "Paste your main webhook...",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        mainWebhook = Text
        Rayfield:Notify({
            Title = "✅ Webhook Saved",
            Content = "Chat logger webhook URL set.",
            Duration = 4
        })
    end
})

-- 🌟 FPS Detection System with Effect Handling + Quality Auto Adjust
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local fpsCheckCooldown = false
local effectsReduced = false
local lastWasLow = false

local originalQuality = settings().Rendering.QualityLevel
local qualityReduced = false
local lastSwitchTime = 0
local switchCooldown = 5

local function reduceEffects()
    if effectsReduced then return end
    effectsReduced = true

    for _, v in ipairs(Lighting:GetChildren()) do
        if v:IsA("BlurEffect") then
            v.Enabled = false
        end
    end

    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
            obj.Enabled = false
        end
    end
end

task.spawn(function()
    local fpsCounter = 0
    local lastTime = os.clock()

    while true do
        RunService.RenderStepped:Wait()
        fpsCounter += 1
        local now = os.clock()

        if now - lastTime >= 1 then
            local fps = fpsCounter
            local timeSinceLastSwitch = tick() - lastSwitchTime

            if fps < 60 then
                if not lastWasLow then
                    lastWasLow = true
                    reduceEffects()
                    Rayfield:Notify({
                        Title = "⚠️ FPS Warning",
                        Content = "FPS has been decreased. Reducing effects to compensate.",
                        Duration = 5
                    })
                end

                if not qualityReduced and timeSinceLastSwitch >= switchCooldown then
                    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
                    qualityReduced = true
                    lastSwitchTime = tick()
                    Rayfield:Notify({
                        Title = "⚙️ Quality Reduced",
                        Content = "Lowered graphics quality to improve FPS.",
                        Duration = 5
                    })
                end
            else
                if lastWasLow then
                    lastWasLow = false
                    Rayfield:Notify({
                        Title = "✅ FPS Restored",
                        Content = "FPS is stable. Restoring performance.",
                        Duration = 5
                    })
                end

                if qualityReduced and timeSinceLastSwitch >= switchCooldown then
                    settings().Rendering.QualityLevel = originalQuality
                    qualityReduced = false
                    lastSwitchTime = tick()
                    Rayfield:Notify({
                        Title = "🌟 Quality Restored",
                        Content = "Graphics quality restored.",
                        Duration = 5
                    })
                end
            end

            fpsCounter = 0
            lastTime = now
        end
    end
end)
