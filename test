local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "testing ui",
   Icon = 0,
   LoadingTitle = "TESTING",
   LoadingSubtitle = "sads",
   Theme = "Bloom",

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

local function LoadScript(url)
    local success, scriptContent = pcall(function()
        return game:HttpGet(url)
    end)
    if success then
        local ok, err = pcall(function()
            loadstring(scriptContent)()
        end)
        if not ok then
            Rayfield:Notify({
                Title = "Error",
                Content = "Script failed: " .. tostring(err),
                Duration = 5
            })
        end
    else
        Rayfield:Notify({
            Title = "Error",
            Content = "Failed to load script URL",
            Duration = 5
        })
    end
end

-- üåü Tab 0 - Main Menu
local MainMenuTab = Window:CreateTab("Main Menu", 4483362458)
local MainMenuSection1 = MainMenuTab:CreateSection("Welcome")



local MainMenuSection2 = MainMenuTab:CreateSection("Discord")

MainMenuTab:CreateButton({
    Name = "üì® Join Discord Server",
    Callback = function()
        setclipboard("https://discord.gg/5pvfUNfQ") -- Replace with your real invite
        Rayfield:Notify({
            Title = "üìã Link Copied",
            Content = "Discord invite copied to clipboard!",
            Duration = 4
        })
    end
})

-- üåü Tab 6 - Character (Movement Speed, Noclip, Fly, Jump Power, Rainbow Clothing)
local Tab6 = Window:CreateTab("Character", 4483362458)
local Section6 = Tab6:CreateSection("Character Controls")

-- üåü Movement Speed Slider
local movementSpeed = 16  -- Default speed value

Tab6:CreateSlider({
    Name = "üö∂ Movement Speed",
    Range = {1, 100},  -- Set the range for the speed
    Increment = 1,     -- Increment value for the slider
    Suffix = " stud/s",  -- Suffix to display next to the value
    CurrentValue = movementSpeed,
    Callback = function(Value)
        movementSpeed = Value
        -- Update player's walking speed based on the slider value
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = movementSpeed
    end
})

-- üåü Noclip Toggle
local noclipEnabled = false  -- Default state for noclip toggle

Tab6:CreateToggle({
    Name = "üö∑ Noclip",
    CurrentValue = noclipEnabled,
    Callback = function(Value)
        noclipEnabled = Value
        local character = game.Players.LocalPlayer.Character
        local humanoid = character and character:FindFirstChild("Humanoid")

        -- Enable or disable noclip based on the toggle state
        if humanoid then
            if noclipEnabled then
                -- Enable noclip (walking through walls)
                game:GetService("RunService").Heartbeat:Connect(function()
                    if noclipEnabled and character then
                        for _, part in pairs(character:GetChildren()) do
                            if part:IsA("BasePart") then
                                part.CanCollide = false
                            end
                        end
                    end
                end)
            else
                -- Disable noclip (re-enable collisions)
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                    end
                end
            end
        end
    end
})

-- üåü Fly Toggle (Infinite Yield style fly)
local flyEnabled = false  -- Default state for fly toggle
local flyingPart
local bodyGyro
local bodyVelocity

Tab6:CreateToggle({
    Name = "üïäÔ∏è Fly",
    CurrentValue = flyEnabled,
    Callback = function(Value)
        flyEnabled = Value
        local character = game.Players.LocalPlayer.Character
        local humanoid = character and character:FindFirstChild("Humanoid")

        if flyEnabled then
            -- Enable Fly (Infinite Yield Style)
            if humanoid and not flyingPart then
                flyingPart = Instance.new("Part")
                flyingPart.Size = Vector3.new(4, 4, 4)
                flyingPart.Shape = Enum.PartType.Ball
                flyingPart.Anchored = false
                flyingPart.CanCollide = false
                flyingPart.Position = character.HumanoidRootPart.Position
                flyingPart.Parent = workspace

                -- Create BodyGyro and BodyVelocity to control flight
                bodyGyro = Instance.new("BodyGyro")
                bodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
                bodyGyro.CFrame = character.HumanoidRootPart.CFrame
                bodyGyro.Parent = flyingPart

                bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(400000, 400000, 400000)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = flyingPart

                -- Attach flyingPart to the HumanoidRootPart
                game:GetService("RunService").RenderStepped:Connect(function()
                    if flyEnabled and character:FindFirstChild("HumanoidRootPart") then
                        flyingPart.CFrame = character.HumanoidRootPart.CFrame
                        bodyGyro.CFrame = character.HumanoidRootPart.CFrame
                    end
                end)
            end
        else
            -- Disable Fly
            if flyingPart then
                flyingPart:Destroy()
                flyingPart = nil
                bodyGyro = nil
                bodyVelocity = nil
            end
        end
    end
})

-- üåü Jump Power (Bubble Gum Games) Slider
local jumpPowerBubbleGum = 50  -- Default jump power value for Bubble Gum Games

Tab6:CreateSlider({
    Name = "ü¶ò Jump Power (Bubble Gum Games)",
    Range = {50, 100000000},  -- Set the range for jump power
    Increment = 50,           -- Increment value for the slider
    Suffix = "",              -- No suffix for this slider
    CurrentValue = jumpPowerBubbleGum,
    Callback = function(Value)
        jumpPowerBubbleGum = Value
        -- Update the character's jump power for Bubble Gum games
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPowerBubbleGum
        -- Some games may use JumpHeight instead of JumpPower, so we set both
        game.Players.LocalPlayer.Character.Humanoid.JumpHeight = jumpPowerBubbleGum * 2  -- Adjust JumpHeight for Bubble Gum games
    end
})

-- üåü Jump Power (All Games) Slider
local jumpPowerAllGames = 50  -- Default jump power value for all games

Tab6:CreateSlider({
    Name = "ü¶ò Jump Power (All Games)",
    Range = {1, 1000},  -- Set the range for jump power to 1 to 1000
    Increment = 1,      -- Increment value for the slider
    Suffix = "",        -- No suffix for this slider
    CurrentValue = jumpPowerAllGames,
    Callback = function(Value)
        jumpPowerAllGames = Value
        -- Update the character's jump power for all games
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPowerAllGames
    end
})

-- üåü Rainbow Clothing Toggle
local rainbowClothingEnabled = false  -- Default state for Rainbow Clothing
local rainbowInterval = 1  -- Time in seconds between each color change (adjust this for slower/faster)

Tab6:CreateToggle({
    Name = "üåà Rainbow Clothing",
    CurrentValue = rainbowClothingEnabled,
    Callback = function(Value)
        rainbowClothingEnabled = Value
        local character = game.Players.LocalPlayer.Character
        local player = game.Players.LocalPlayer

        -- Toggle the "Rainbow Clothing" behavior
        if rainbowClothingEnabled then
            -- Start a loop to continuously change colors with a delay
            spawn(function()
                while rainbowClothingEnabled and character do
                    -- Apply random colors to the body parts
                    for _, part in pairs(character:GetChildren()) do
                        if part:IsA("BasePart") then
                            part.Color = Color3.fromHSV(math.random(), 1, 1)
                        end
                    end

                    -- Change clothing colors randomly as well
                    local shirt = character:FindFirstChildOfClass("Shirt")
                    local pants = character:FindFirstChildOfClass("Pants")
                    if shirt then
                        shirt.Color3 = Color3.fromHSV(math.random(), 1, 1)
                    end
                    if pants then
                        pants.Color3 = Color3.fromHSV(math.random(), 1, 1)
                    end

                    -- Wait to slow down the color change
                    wait(rainbowInterval)
                end
            end)

            -- Hide the head to further hide the avatar
            local head = character:FindFirstChild("Head")
            if head then
                head.Transparency = 1  -- Make the head completely invisible
            end
        else
            -- Reset avatar appearance back to normal
            player.DisplayName = player.Name  -- Revert back to original display name

            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Color = Color3.fromRGB(255, 255, 255)  -- Reset to default color
                end
            end

            -- Show the head again
            local head = character:FindFirstChild("Head")
            if head then
                head.Transparency = 0  -- Make the head visible again
            end

            -- Reset clothing to default colors
            local shirt = character:FindFirstChildOfClass("Shirt")
            local pants = character:FindFirstChildOfClass("Pants")
            if shirt then
                shirt.Color3 = Color3.fromRGB(255, 255, 255)  -- Default color for shirt
            end
            if pants then
                pants.Color3 = Color3.fromRGB(255, 255, 255)  -- Default color for pants
            end
        end
    end
})

-- üåü Tab 1 - Dead Rails Scripts
local Tab1 = Window:CreateTab("Dead Rails Scripts", 4483362458)
local Section1 = Tab1:CreateSection("Useful Scripts")

Tab1:CreateButton({ Name = "Speed Hub x (HAS KEY)", Callback = function() LoadScript("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua") end })
Tab1:CreateButton({ Name = "Spider X Hub", Callback = function() LoadScript("https://raw.githubusercontent.com/SpiderScriptRB/Sta1kerH1ck-/refs/heads/main/Dead%20Rails%20SpiderXHub.txt") end })
Tab1:CreateButton({ Name = "Fly GUI", Callback = function() LoadScript("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt") end })
Tab1:CreateButton({ Name = "Anti AFK", Callback = function() LoadScript("https://raw.githubusercontent.com/hassanxzayn-lua/Anti-afk/main/antiafkbyhassanxzyn") end })

-- üåü Tab 2 - Beaks Scripts
local Tab2 = Window:CreateTab("Beaks ", 4483362458)
local Section2 = Tab2:CreateSection("More Scripts")

Tab2:CreateButton({ Name = "Mobile Auto Bird", Callback = function() LoadScript("https://rawscripts.net/raw/Beaks-Auto-Shoot-Birds-36324") end })
Tab2:CreateButton({ Name = "Native (HAS KEY)", Callback = function() LoadScript("https://getnative.cc/script/loader") end })
Tab2:CreateButton({ Name = "Server Crasher (Test)", Callback = function() LoadScript("https://raw.githubusercontent.com/scriptinguniverse/fakeurl/main/servercrasher.lua") end })
Tab2:CreateButton({ Name = "Mobile Script", Callback = function() LoadScript("https://raw.githubusercontent.com/RobloxScriptHub/MobileScript/main/script.lua") end })

-- üåü Tab 3 - PetSim/PetsGo
local Tab3 = Window:CreateTab("PetSim/PetsGo", 4483362458)
local Section3 = Tab3:CreateSection("Pet Sim Scripts")

Tab3:CreateButton({ Name = "ZapHub (PetSim HAS KEY)", Callback = function() LoadScript("https://zaphub.xyz/Exec") end })
Tab3:CreateButton({ Name = "ZapHub (PetsGO HAS KEY)", Callback = function() LoadScript("https://zaphub.xyz/Exec") end })
Tab3:CreateButton({ Name = "Project WD Hub", Callback = function() LoadScript("https://raw.githubusercontent.com/Project-WD/scripts/main/main.lua") end })

-- üåü Tab 4 - JailBreak
local Tab4 = Window:CreateTab("JailBreak", 4483362458)
local Section4 = Tab4:CreateSection("JailBreak Scripts")

Tab4:CreateButton({ Name = "Blitz", Callback = function() LoadScript("https://raw.githubusercontent.com/BlitzIsKing/UniversalFarm/main/Loader/Regular") end })
Tab4:CreateButton({ Name = "Admin GUI", Callback = function() LoadScript("https://pastebin.com/raw/Bjz3U2bW") end })
Tab4:CreateButton({ Name = "ThunderZ GUI", Callback = function() LoadScript("https://pastebin.com/raw/VLktG2yY") end })

-- üåü Tab 5 - Fisch
local Tab5 = Window:CreateTab("Fisch", 4483362458)
local Section5 = Tab5:CreateSection("Fisch Scripts")

Tab5:CreateButton({ Name = "Fisch GUI", Callback = function() LoadScript("https://raw.githubusercontent.com/FischScripts/FischHub/main/FischGui.lua") end })
Tab5:CreateButton({ Name = "Auto Chest Collector", Callback = function() LoadScript("https://raw.githubusercontent.com/FischScripts/FischHub/main/AutoChest.lua") end })
Tab5:CreateButton({ Name = "Utility Tools", Callback = function() LoadScript("https://raw.githubusercontent.com/FischScripts/FischHub/main/Utils.lua") end })

-- üåü Tab 6 - Settings
local SettingsTab = Window:CreateTab("Settings", 4483362458)
local SettingsSection = SettingsTab:CreateSection("Performance")

SettingsTab:CreateSlider({
    Name = "FPS Cap",
    Range = {30, 240},
    Increment = 10,
    Suffix = " FPS",
    CurrentValue = 60,
    Callback = function(Value)
        if setfpscap then
            setfpscap(Value)
            Rayfield:Notify({
                Title = "üéØ FPS Cap Set",
                Content = "FPS has been capped to " .. tostring(Value),
                Duration = 4
            })
        else
            Rayfield:Notify({
                Title = "‚ö†Ô∏è Unsupported",
                Content = "Your executor does not support setfpscap.",
                Duration = 5
            })
        end
    end
})
-- üåü Watermark Settings Section
local WatermarkSection = SettingsTab:CreateSection("WaterMark")

-- üåü Watermark Position Sliders
local wmX = 10
local wmY = 10

SettingsTab:CreateSlider({
    Name = "‚ÜîÔ∏è Watermark X Position",
    Range = {0, 1700},
    Increment = 5,
    Suffix = " px",
    CurrentValue = wmX,
    Callback = function(Value)
        wmX = Value
        if watermark then
            watermark.Position = Vector2.new(wmX, wmY)
        end
    end
})

SettingsTab:CreateSlider({
    Name = "‚ÜïÔ∏è Watermark Y Position",
    Range = {0, 965},
    Increment = 5,
    Suffix = " px",
    CurrentValue = wmY,
    Callback = function(Value)
        wmY = Value
        if watermark then
            watermark.Position = Vector2.new(wmX, wmY)
        end
    end
})

SettingsTab:CreateToggle({
    Name = "üß© Toggle Watermark",
    CurrentValue = true,
    Callback = function(Value)
        if watermark then
            watermark.Visible = Value
        end
    end
})

-- üåü Watermark Display Toggles (FPS, Ping, Time, Uptime)
local showFPS = true
local showPing = true
local showTime = true
local showUptime = true

SettingsTab:CreateToggle({
    Name = "üñ•Ô∏è Toggle FPS Display",
    CurrentValue = showFPS,
    Callback = function(Value)
        showFPS = Value
    end
})

SettingsTab:CreateToggle({
    Name = "üì° Toggle Ping Display",
    CurrentValue = showPing,
    Callback = function(Value)
        showPing = Value
    end
})

SettingsTab:CreateToggle({
    Name = "üïí Toggle Time Display",
    CurrentValue = showTime,
    Callback = function(Value)
        showTime = Value
    end
})

SettingsTab:CreateToggle({
    Name = "‚è±Ô∏è Toggle Uptime Display",
    CurrentValue = showUptime,
    Callback = function(Value)
        showUptime = Value
    end
})

-- üåü Keep the Watermark (FPS, Ping, Time, Uptime) Code Separate at the Bottom
do
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    watermark = Drawing.new("Text")
    watermark.Visible = true
    watermark.Color = Color3.fromRGB(255, 255, 255)
    watermark.Size = 16
    watermark.Position = Vector2.new(wmX, wmY)
    watermark.Outline = true
    watermark.Font = 2
    watermark.Center = false

    -- Time Setup
    local startTime = tick()
    local frameCounter = 0
    local lastFpsUpdate = tick()
    local currentFPS = 0
    local currentPing = 0

    RunService.RenderStepped:Connect(function()
        frameCounter += 1
        local now = tick()

        if now - lastFpsUpdate >= 1 then
            currentFPS = frameCounter
            frameCounter = 0
            lastFpsUpdate = now

            local success, result = pcall(function()
                return LocalPlayer:GetNetworkPing() * 1000
            end)
            if success and result then
                currentPing = math.floor(result + 0.5)
            end
        end

        local uptime = tick() - startTime
        local hrs = math.floor(uptime / 3600)
        local mins = math.floor((uptime % 3600) / 60)
        local secs = math.floor(uptime % 60)
        local uptimeStr = string.format("%02d:%02d:%02d", hrs, mins, secs)

        local dt = os.date("*t")
        local ampm = dt.hour >= 12 and "PM" or "AM"
        local hour12 = dt.hour % 12
        if hour12 == 0 then hour12 = 12 end
        local timeStr = string.format("%02d/%02d/%04d %02d:%02d %s", dt.day, dt.month, dt.year, hour12, dt.min, ampm)

        -- Build the watermark text based on toggles
        local textParts = {"üß© Polluted Hub"}
        
        if showFPS then
            table.insert(textParts, string.format("FPS: %d", currentFPS))
        end
        if showPing then
            table.insert(textParts, string.format("Ping: %dms", currentPing))
        end
        if showTime then
            table.insert(textParts, string.format("Time: %s", timeStr))
        end
        if showUptime then
            table.insert(textParts, string.format("Uptime: %s", uptimeStr))
        end

        -- Update watermark text
        watermark.Text = table.concat(textParts, " | ")
    end)
end


SettingsTab:CreateSection("Webhooks & Discord")

-- Webhook Textboxes
local mainWebhook = ""
local backupWebhook = ""

SettingsTab:CreateInput({
    Name = "Chat Logger Webhook",
    PlaceholderText = "Paste your main webhook...",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        mainWebhook = Text
        Rayfield:Notify({
            Title = "‚úÖ Webhook Saved",
            Content = "Chat logger webhook URL set.",
            Duration = 4
        })
    end
})

SettingsTab:CreateInput({
    Name = "Join Logger Webhook",
    PlaceholderText = "Paste your backup webhook...",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        backupWebhook = Text
        Rayfield:Notify({
            Title = "‚úÖ Webhook Saved",
            Content = "Join logger webhook URL set.",
            Duration = 4
        })
    end
})

SettingsTab:CreateButton({
    Name = "üß™ Test Chat Logger",
    Callback = function()
        if mainWebhook and mainWebhook ~= "" then
            local data = {
                ["content"] = "‚úÖ Test message from Chat Logger!"
            }
            local requestFunc = syn and syn.request or http_request or request or (http and http.request)
            if requestFunc then
                local success, result = pcall(function()
                    return requestFunc({
                        Url = mainWebhook,
                        Method = "POST",
                        Headers = {["Content-Type"] = "application/json"},
                        Body = HttpService:JSONEncode(data)
                    })
                end)
                if success then
                    Rayfield:Notify({Title = "Success", Content = "Chat Logger test sent.", Duration = 4})
                else
                    Rayfield:Notify({Title = "Error", Content = "Failed to send main webhook test.", Duration = 4})
                end
            else
                Rayfield:Notify({Title = "Unsupported", Content = "HTTP requests not supported.", Duration = 5})
            end
        else
            Rayfield:Notify({Title = "Missing URL", Content = "Chat Logger webhook is not set.", Duration = 4})
        end
    end
})

SettingsTab:CreateButton({
    Name = "üß™ Test Join Logger",
    Callback = function()
        if backupWebhook and backupWebhook ~= "" then
            local data = {
                ["content"] = "‚úÖ Test message from Join Logger!"
            }
            local requestFunc = syn and syn.request or http_request or request or (http and http.request)
            if requestFunc then
                local success, result = pcall(function()
                    return requestFunc({
                        Url = backupWebhook,
                        Method = "POST",
                        Headers = {["Content-Type"] = "application/json"},
                        Body = HttpService:JSONEncode(data)
                    })
                end)
                if success then
                    Rayfield:Notify({Title = "Success", Content = "Join Logger test sent.", Duration = 4})
                else
                    Rayfield:Notify({Title = "Error", Content = "Failed to send backup webhook test.", Duration = 4})
                end
            else
                Rayfield:Notify({Title = "Unsupported", Content = "HTTP requests not supported.", Duration = 5})
            end
        else
            Rayfield:Notify({Title = "Missing URL", Content = "Join Logger webhook is not set.", Duration = 4})
        end
    end
})

SettingsTab:CreateButton({
    Name = "üì® Join Discord Server",
    Callback = function()
        setclipboard("https://discord.gg/5pvfUNfQ") -- Replace with your real invite
        Rayfield:Notify({
            Title = "üìã Link Copied",
            Content = "Discord invite copied to clipboard!",
            Duration = 4
        })
    end
})

-- üåü FPS Detection System with Effect Handling + Quality Auto Adjust
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local fpsCheckCooldown = false
local effectsReduced = false
local lastWasLow = false

local originalQuality = settings().Rendering.QualityLevel
local qualityReduced = false
local lastSwitchTime = 0
local switchCooldown = 5

local function reduceEffects()
    if effectsReduced then return end
    effectsReduced = true

    for _, v in ipairs(Lighting:GetChildren()) do
        if v:IsA("BlurEffect") then
            v.Enabled = false
        end
    end

    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
            obj.Enabled = false
        end
    end
end

task.spawn(function()
    local fpsCounter = 0
    local lastTime = os.clock()

    while true do
        RunService.RenderStepped:Wait()
        fpsCounter += 1
        local now = os.clock()

        if now - lastTime >= 1 then
            local fps = fpsCounter
            local timeSinceLastSwitch = tick() - lastSwitchTime

            if fps < 60 then
                if not lastWasLow then
                    lastWasLow = true
                    reduceEffects()
                    Rayfield:Notify({
                        Title = "‚ö†Ô∏è FPS Warning",
                        Content = "FPS has been decreased. Reducing effects to compensate.",
                        Duration = 5
                    })
                end

                if not qualityReduced and timeSinceLastSwitch >= switchCooldown then
                    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
                    qualityReduced = true
                    lastSwitchTime = tick()
                    Rayfield:Notify({
                        Title = "‚öôÔ∏è Quality Reduced",
                        Content = "Lowered graphics quality to improve FPS.",
                        Duration = 5
                    })
                end
            else
                if lastWasLow then
                    lastWasLow = false
                    Rayfield:Notify({
                        Title = "‚úÖ FPS Restored",
                        Content = "FPS is stable. Restoring performance.",
                        Duration = 5
                    })
                end

                if qualityReduced and timeSinceLastSwitch >= switchCooldown then
                    settings().Rendering.QualityLevel = originalQuality
                    qualityReduced = false
                    lastSwitchTime = tick()
                    Rayfield:Notify({
                        Title = "üåü Quality Restored",
                        Content = "Graphics quality restored.",
                        Duration = 5
                    })
                end
            end

            fpsCounter = 0
            lastTime = now
        end
    end
end)
